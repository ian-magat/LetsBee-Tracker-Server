
//GET ALL BATCHES 

drop procedure if exists sp_allBatch;
DELIMITER //
CREATE PROCEDURE sp_allBatch()
BEGIN
SELECT `id`,`batch_num`,`current_location`,(SELECT COUNT(*) FROM tblitems WHERE batch_num = i.batch_num) batch_qty FROM tblitems i WHERE hasItem = 1 GROUP BY i.batch_num ORDER BY id DESC;
END //
DELIMITER ;

//GET ALL ITEM BATCHES 
DELIMITER //

CREATE PROCEDURE sp_allBatchItems(
	IN batchNo VARCHAR(255)
)
BEGIN
SELECT `id`,item_no,sender,`sender_payment`,receiver,`receiver_payment`,`tracking_num`,`batch_num`,`phone_number`,`declared_item`,`weight`,`dimensions`,`quantity`,`current_location`,`clientTransactionNo`,trxTimeStamp,`isDelivered`,`isSent` FROM tblitems where batch_num = batchNo;
END //

DELIMITER ;

//GET TRX INFO

DELIMITER //

CREATE PROCEDURE sp_getTrxInfo(
	IN batchNo VARCHAR(255)
)
BEGIN
SELECT (SELECT 200 ) code,RPAD(SUBSTR(receiver, 1, 1), Length(receiver), '*') receiver,RPAD(SUBSTR(sender, 1, 1), Length(sender), '*') sender,trxTimeStamp steps FROM tblitems where clientTransactionNo = batchNo;
END //

DELIMITER ;


//INSERT NEW MOBILE NO 
DELIMITER //

CREATE PROCEDURE sp_insertRecipient(
	IN mobileNo_ VARCHAR(255),
    IN name_ VARCHAR(255)
)
BEGIN
 INSERT INTO tblRecipients (mobileNo,name) 
  SELECT mobileNo_, name_ 
  WHERE NOT EXISTS (
    SELECT * FROM tblRecipients WHERE  mobileNo = mobileNo_
  );
END //
DELIMITER ;


//GENERATE TRX NUMBER//

drop procedure if exists sp_generate_trx_number;
DELIMITER //  
CREATE PROCEDURE sp_generate_trx_number(
IN p_i INT)   
BEGIN
DECLARE i INT DEFAULT 0; 
WHILE (i <= p_i) DO
    INSERT INTO tblitems (clientTransactionNo) VALUES (LPAD(FLOOR(RAND() * 9999999), 7, '0'));
    SET i = i+1;
END WHILE;
END;
//